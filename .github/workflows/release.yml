# .github/workflows/release.yml

name: Create Release and Build Binaries

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  # --- Job 1: 并行构建所有平台 ---
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: pyinstaller --onefile --windowed --name ImageCompressor ./src/main.py

      - name: Prepare artifact
        id: prepare-artifact
        shell: bash
        run: |
          # 为不同平台准备产物
          if [ "${{ runner.os }}" == "Windows" ]; then
            mv dist/ImageCompressor.exe dist/ImageCompressor-Windows.exe
            echo "ARTIFACT_PATH=dist/ImageCompressor-Windows.exe" >> $GITHUB_ENV
          elif [ "${{ runner.os }}" == "macOS" ]; then
            zip -r dist/ImageCompressor-macOS.zip dist/ImageCompressor.app
            echo "ARTIFACT_PATH=dist/ImageCompressor-macOS.zip" >> $GITHUB_ENV
          else # Linux
            mv dist/ImageCompressor dist/ImageCompressor-Linux
            echo "ARTIFACT_PATH=dist/ImageCompressor-Linux" >> $GITHUB_ENV
          fi

      - name: Upload artifact for release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-artifact # 为每个产物起一个唯一的名字
          path: ${{ env.ARTIFACT_PATH }}

  # --- Job 2: 创建并发布 Release ---
  release:
    needs: build # 等待所有的 build 任务完成
    runs-on: ubuntu-latest
    steps:
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: "自动打包发布的新版本。"
          draft: false # 直接发布，不再需要草稿
          prerelease: false
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts # 下载到 artifacts 文件夹

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Upload assets to release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/* # 使用通配符上传所有下载的产物